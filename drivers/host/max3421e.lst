
max3421e.a65


   61 T:1000                                    ;MAX3421E_EnMask = 0x04

   63 T:1000                                    ;#define DEBUG

usb.i65


   27 T:1000                                    ; ---------------------------------------------------------------------------------------
   28 T:1000                                    ; usbdev_init parameter

   33 T:1000                                    ; ---------------------------------------------------------------------------------------
   34 T:1000                                    ; USB setup packet

   44 T:1000                                    ; ---------------------------------------------------------------------------------------
   45 T:1000                                    ; USB host control structure
   46 T:1000                                    ; interface to the various usb_* functions

   60 T:1000                                    ; ---------------------------------------------------------------------------------------
   61 T:1000                                    ; input value to the poll routine when carry is set

   65 T:1000                                    ; ---------------------------------------------------------------------------------------
   66 T:1000                                    ; return value from usb_cb_detected on success (CLC)

   71 T:1000                                    ; ---------------------------------------------------------------------------------------
   72 T:1000                                    ; poll register struct
   73 T:1000                                    ; used to register an endpoint poll callback

   80 T:1000                                    ; ---------------------------------------------------------------------------------------
   81 T:1000                                    ; USB standard values

   83 T:1000                                    ; PID Values

max3421e.i65


hostmsg.i65


debug.i65


max3421e.a65


   70 T:1000                                     .( 

   72 T:1000                                     .importzp MAX3421E_EnMask

   74 T:1000                                     .zero 
   75 Z:0004  00 00                    ctrlptr   .word 0
   76 Z:0006  00 00                    dataptr   .word 0
   77 Z:0008                                     .data 

   79 D:0400  00                       rootspd   .byt 0           ; speed (low/full) of attached device (e.g. root hub)
   80 D:0401  00                       present   .byt 0           ; when set, device is present

   82 D:0402  00                       len       .byt 0           ; length of a (requested IN) packet
   83 D:0403  00                       endpt     .byt 0
   84 D:0404  00                       flags     .byt 0
   85 D:0405  00                       maxpklen  .byt 0           ; maximum allowed size for packet
   86 D:0406  00                       cnt       .byt 0
   87 D:0407  00                       rcnt      .byt 0           ; retry count
   88 D:0408  00                       bcnt      .byt 0           ; byt count up to len for packet transfer

   93 D:0409                                     .text 

   95 T:1000                                    ;-----------------------------------------------------------
   96 T:1000                                    ; initialization

   98 T:1000                                    ; check
   99 T:1000                           usb_host_init .( 

  101 T:1000                                    ; can't really detect HW for now

  103 T:1000  20 00 00                           jsr spi_init

  105 T:1003                                    ; SPI = full duplex, INTLEVEL = negative level
  106 T:1003                                    ; should set GPX if used, is not used here
  107 T:1003  a9 00                              lda #<MAX3421E_EnMask
  107 T:1005  20 00 00                           jsr spi_enable
  107 T:1008  a9 8a                              lda #((17<<3))|$02
  107 T:100a  20 00 00                           jsr spi_wra
  107 T:100d  a9 18                              lda #($10+$08)
  107 T:100f  20 00 00                           jsr spi_wra
  107 T:1012  20 00 00                           jsr spi_disable

  109 T:1015                                    ; reset (leaves FDUPSPI and INTLEVEL as they are)
  110 T:1015  a9 00                              lda #<MAX3421E_EnMask
  110 T:1017  20 00 00                           jsr spi_enable
  110 T:101a  a9 7a                              lda #(15<<3)|$02
  110 T:101c  20 00 00                           jsr spi_wra
  110 T:101f  a9 20                              lda #($20)
  110 T:1021  20 00 00                           jsr spi_wra
  110 T:1024  20 00 00                           jsr spi_disable
  111 T:1027                                    ; deassert reset
  112 T:1027  a9 00                              lda #<MAX3421E_EnMask
  112 T:1029  20 00 00                           jsr spi_enable
  112 T:102c  a9 7a                              lda #(15<<3)|$02
  112 T:102e  20 00 00                           jsr spi_wra
  112 T:1031  a9 00                              lda #(0)
  112 T:1033  20 00 00                           jsr spi_wra
  112 T:1036  20 00 00                           jsr spi_disable

  114 T:1039                                    ; wait for oscillator (chip reset stops it, need to wait for coming up)
  115 T:1039  a9 00                    l0        lda #<MAX3421E_EnMask
  115 T:103b  20 00 00                           jsr spi_enable
  115 T:103e  a9 68                              lda #13<<3|$00
  115 T:1040  20 00 00                           jsr spi_wra
  115 T:1043  20 00 00                           jsr spi_wra
  115 T:1046  48                                 pha 
  115 T:1047  20 00 00                           jsr spi_disable
  115 T:104a  68                                 pla 
  116 T:104b  29 01                              and #$01
  117 T:104d  f0 ea                              beq l0

  119 T:104f                                    ; set into HOST mode
  120 T:104f                                    ; weak pull down on D+ and D- for SAMPLEBUS to work
  121 T:104f  a9 00                              lda #<MAX3421E_EnMask
  121 T:1051  20 00 00                           jsr spi_enable
  121 T:1054  a9 da                              lda #(27<<3)|$02
  121 T:1056  20 00 00                           jsr spi_wra
  121 T:1059  a9 c1                              lda #($01+$80+$40)
  121 T:105b  20 00 00                           jsr spi_wra
  121 T:105e  20 00 00                           jsr spi_disable

  123 T:1061                                    ; success
  124 T:1061  18                                 clc 

  126 T:1062                                    ; Note: we don't use interrupts, so we don't need to enable
  127 T:1062                                    ; them here - we just poll them in polldev

  130 T:1062  a9 ff                              lda #<-1
  131 T:1064  8d 01 04                           sta present             ; trigger initial device detection check
  132 T:1067  60                       err       rts 
  133 T:1068                                     .) 

  135 T:1068                           usb_host_polldev .( 

  139 T:1068  ad 01 04                           lda present
  140 T:106b  30 16                              bmi check

  142 T:106d  a9 00                              lda #<MAX3421E_EnMask
  142 T:106f  20 00 00                           jsr spi_enable
  142 T:1072  a9 c8                              lda #25<<3|$00
  142 T:1074  20 00 00                           jsr spi_wra
  142 T:1077  20 00 00                           jsr spi_wra
  142 T:107a  48                                 pha 
  142 T:107b  20 00 00                           jsr spi_disable
  142 T:107e  68                                 pla 
  143 T:107f  29 20                              and #$20
  144 T:1081  f0 19                              beq nochange

  146 T:1083                           check     
  147 T:1083  a9 20                              lda #$20
  148 T:1085  48                                 pha 
  148 T:1086  a9 00                              lda #<MAX3421E_EnMask
  148 T:1088  20 00 00                           jsr spi_enable
  148 T:108b  a9 ca                              lda #(25<<3)|$02
  148 T:108d  20 00 00                           jsr spi_wra
  148 T:1090  68                                 pla 
  148 T:1091  20 00 00                           jsr spi_wra
  148 T:1094  20 00 00                           jsr spi_disable                ; clear interrupt bit, just in case

  150 T:1097                                    ; only called when changed, so ok to change LOWSPEED bit
  151 T:1097                                    ; with this call
  152 T:1097  20 2d 15                           jsr queryusbdevice
  153 T:109a  90 05                              bcc notfnd
  154 T:109c                           nochange  
  155 T:109c  ad 01 04                           lda present             ; set in queryusbdevice
  156 T:109f  d0 02                              bne found
  157 T:10a1  38                       notfnd    sec 
  158 T:10a2  60                                 rts 
  159 T:10a3  18                       found     clc 
  160 T:10a4  60                                 rts 
  161 T:10a5                                     .) 

  163 T:10a5                                    ; init the chip
  164 T:10a5                           usb_host_devinit .( 

  166 T:10a5  20 9b 15                           jsr usbreset

  168 T:10a8                                    ;jsr clearirq

  170 T:10a8  a9 0a                              lda #10
  171 T:10aa  20 00 00                           jsr pause

  173 T:10ad  20 2d 15                           jsr queryusbdevice

  175 T:10b0  b0 04                              bcs device

  177 T:10b2                                    ;jsr clearirq
  178 T:10b2  a9 00                    nodev     lda #0          ; no device found error condition
  179 T:10b4  38                                 sec                    ; error

  181 T:10b5  60                                 rts 
  182 T:10b6                           device    

  184 T:10b6  a9 01                              lda #1
  185 T:10b8  20 00 00                           jsr pause
  186 T:10bb  20 2d 15                           jsr queryusbdevice
  187 T:10be  90 f2                              bcc nodev

  189 T:10c0  18                                 clc 

  191 T:10c1  60                                 rts 
  192 T:10c2                                     .) 

  194 T:10c2                           usb_host_reset .( 

  197 T:10c2  8d 00 04                           sta rootspd             ; store root speed

  199 T:10c5  aa                                 tax 
  200 T:10c6  d0 17                              bne init_full

  202 T:10c8                                    ; init chip for low speed device
  203 T:10c8                           init_low  
  204 T:10c8  a9 00                              lda #<MAX3421E_EnMask
  204 T:10ca  20 00 00                           jsr spi_enable
  204 T:10cd  a9 d8                              lda #27<<3|$00
  204 T:10cf  20 00 00                           jsr spi_wra
  204 T:10d2  20 00 00                           jsr spi_wra
  204 T:10d5  48                                 pha 
  204 T:10d6  20 00 00                           jsr spi_disable
  204 T:10d9  68                                 pla 
  205 T:10da  09 02                              ora #$02

  207 T:10dc  4c f3 10                           jmp setspeed

  209 T:10df                                    ; init chip for full speed device
  210 T:10df                           init_full 
  211 T:10df  a9 00                              lda #<MAX3421E_EnMask
  211 T:10e1  20 00 00                           jsr spi_enable
  211 T:10e4  a9 d8                              lda #27<<3|$00
  211 T:10e6  20 00 00                           jsr spi_wra
  211 T:10e9  20 00 00                           jsr spi_wra
  211 T:10ec  48                                 pha 
  211 T:10ed  20 00 00                           jsr spi_disable
  211 T:10f0  68                                 pla 
  212 T:10f1  29 fd                              and #255-$02
  213 T:10f3                           setspeed  
  214 T:10f3  48                                 pha 
  214 T:10f4  a9 00                              lda #<MAX3421E_EnMask
  214 T:10f6  20 00 00                           jsr spi_enable
  214 T:10f9  a9 da                              lda #(27<<3)|$02
  214 T:10fb  20 00 00                           jsr spi_wra
  214 T:10fe  68                                 pla 
  214 T:10ff  20 00 00                           jsr spi_wra
  214 T:1102  20 00 00                           jsr spi_disable

  216 T:1105                                    ; set 0 as peripheral address for a start
  217 T:1105  a9 00                              lda #<MAX3421E_EnMask
  217 T:1107  20 00 00                           jsr spi_enable
  217 T:110a  a9 e2                              lda #(28<<3)|$02
  217 T:110c  20 00 00                           jsr spi_wra
  217 T:110f  a9 00                              lda #(0)
  217 T:1111  20 00 00                           jsr spi_wra
  217 T:1114  20 00 00                           jsr spi_disable

  219 T:1117                                    ;jsr usbreset ; reset attached device
  220 T:1117  20 e9 15                           jsr startsof

  222 T:111a                                    ; clear connect IRQ, as may be set by changing LOWSPEED
  223 T:111a  a9 00                              lda #<MAX3421E_EnMask
  223 T:111c  20 00 00                           jsr spi_enable
  223 T:111f  a9 ca                              lda #(25<<3)|$02
  223 T:1121  20 00 00                           jsr spi_wra
  223 T:1124  a9 20                              lda #($20)
  223 T:1126  20 00 00                           jsr spi_wra
  223 T:1129  20 00 00                           jsr spi_disable
  224 T:112c                                    ;lda #<-1
  225 T:112c                                    ;sta present
  226 T:112c  60                                 rts 
  227 T:112d                                     .) 

  229 T:112d                                    ; set params from the HOST_CTRL_* struct
  230 T:112d                           set_params .( 
  231 T:112d  a0 00                              ldy #0
  232 T:112f  b1 04                              lda (ctrlptr),y
  233 T:1131  48                                 pha 
  233 T:1132  a9 00                              lda #<MAX3421E_EnMask
  233 T:1134  20 00 00                           jsr spi_enable
  233 T:1137  a9 e2                              lda #(28<<3)|$02
  233 T:1139  20 00 00                           jsr spi_wra
  233 T:113c  68                                 pla 
  233 T:113d  20 00 00                           jsr spi_wra
  233 T:1140  20 00 00                           jsr spi_disable
  234 T:1143  c8                                 iny                    ; HOST_CTRL_ENDPOINT
  235 T:1144  b1 04                              lda (ctrlptr),y
  236 T:1146  8d 03 04                           sta endpt

  238 T:1149  c8                                 iny                    ; HOST_CTRL_SPEED
  239 T:114a  b1 04                              lda (ctrlptr),y
  240 T:114c  20 e7 14                           jsr set_pream

  242 T:114f  c8                                 iny                    ; HOST_CTRL_FLAGS
  243 T:1150  b1 04                              lda (ctrlptr),y
  244 T:1152  8d 04 04                           sta flags

  246 T:1155  c8                                 iny                    ; HOST_CTRL_MAXPKLEN low
  247 T:1156  b1 04                              lda (ctrlptr),y
  248 T:1158  8d 05 04                           sta maxpklen
  249 T:115b  c9 41                              cmp #$41             ; we currently support only full speed, i.e. up to 64 byte
  250 T:115d  b0 12                              bcs lenerr                ; equals or larger than $41, than error
  251 T:115f  c8                                 iny                    ; HOST_CTRL_MAXPKLEN hi
  252 T:1160  b1 04                              lda (ctrlptr),y
  253 T:1162  d0 0d                              bne lenerr

  255 T:1164  c8                                 iny                    ; HOST_CTRL_BUFLEN low
  256 T:1165  b1 04                              lda (ctrlptr),y         ; buflen
  257 T:1167                                    ;cmp #$41
  258 T:1167                                    ;bcs lenerr  ; we currently support only up to $f0 byte transfers (max sl811h buffer)
  259 T:1167  8d 02 04                           sta len
  260 T:116a  c8                                 iny 
  261 T:116b  b1 04                              lda (ctrlptr),y
  262 T:116d  d0 02                              bne lenerr                ; we currently support only up to 64 byte transfers
  263 T:116f  18                                 clc 
  264 T:1170  60                                 rts 

  267 T:1171  a9 f6                    lenerr    lda #<-10

  269 T:1173  38                                 sec 
  270 T:1174  60                                 rts 
  271 T:1175                                     .) 

  273 T:1175                                    ; set ctrlptr from the control block
  274 T:1175                           ptr_to_buffer .( 
  275 T:1175  a0 08                              ldy #8             ; put buffer address into ctrlptr
  276 T:1177  b1 04                              lda (ctrlptr),y
  277 T:1179  48                                 pha 
  278 T:117a  c8                                 iny 
  279 T:117b  b1 04                              lda (ctrlptr),y
  280 T:117d  85 07                              sta dataptr+1
  281 T:117f  68                                 pla 
  282 T:1180  85 06                              sta dataptr
  283 T:1182  60                                 rts 
  284 T:1183                                     .) 

  286 T:1183                           usb_host_get .( 
  287 T:1183  85 04                              sta ctrlptr
  288 T:1185  84 05                              sty ctrlptr+1

  290 T:1187                                    ; clear xfer done irq, just in case
  291 T:1187  a9 00                              lda #<MAX3421E_EnMask
  291 T:1189  20 00 00                           jsr spi_enable
  291 T:118c  a9 ca                              lda #(25<<3)|$02
  291 T:118e  20 00 00                           jsr spi_wra
  291 T:1191  a9 80                              lda #($80)
  291 T:1193  20 00 00                           jsr spi_wra
  291 T:1196  20 00 00                           jsr spi_disable

  293 T:1199  20 2d 11                           jsr set_params
  294 T:119c  b0 06                              bcs end

  296 T:119e                                    ; set dataptr to data buffer address
  297 T:119e  20 75 11                           jsr ptr_to_buffer

  299 T:11a1  4c a5 11                           jmp get_in
  300 T:11a4  60                       end       rts 
  301 T:11a5                                     .) 

  303 T:11a5                                    ; IN transfer into buffer as given (in ctrlptr)
  304 T:11a5                           get_in    .( 
  305 T:11a5                                    ; set retry count
  306 T:11a5                                     .( 
  307 T:11a5  2c 04 04                           bit flags             ; check HOST_FLAG_IGNORE_NAK in bit 7
  308 T:11a8  10 03                              bpl doretry
  309 T:11aa  a9 01                              lda #1
  310 T:11ac  2c                                 .byt $2c
  311 T:11ad  a9 0a                    doretry   lda #10
  312 T:11af  8d 07 04                           sta rcnt
  313 T:11b2                                     .) 

  315 T:11b2                                    ; set byte count
  316 T:11b2  a9 00                              lda #0
  317 T:11b4  8d 08 04                           sta bcnt

  319 T:11b7                                    ; set toggle
  320 T:11b7  a0 03                              ldy #3
  321 T:11b9  b1 04                              lda (ctrlptr),y
  322 T:11bb  29 40                              and #$40
  323 T:11bd  d0 03                              bne togd1
  324 T:11bf  a9 10                              lda #$10
  325 T:11c1  2c                                 .byt $2c
  326 T:11c2  a9 20                    togd1     lda #$20
  327 T:11c4  48                                 pha 
  327 T:11c5  a9 00                              lda #<MAX3421E_EnMask
  327 T:11c7  20 00 00                           jsr spi_enable
  327 T:11ca  a9 ea                              lda #(29<<3)|$02
  327 T:11cc  20 00 00                           jsr spi_wra
  327 T:11cf  68                                 pla 
  327 T:11d0  20 00 00                           jsr spi_wra
  327 T:11d3  20 00 00                           jsr spi_disable

  329 T:11d6                           againin   
  330 T:11d6                                    ; start command
  331 T:11d6  a9 00                              lda #(0)
  332 T:11d8  0d 03 04                           ora endpt             ; BULK/IN command is $0x ORd with endpoint number
  333 T:11db  20 59 14                           jsr docmd
  334 T:11de  f0 14                              beq noerror                ; hrSUCCESS is 0

  336 T:11e0  c9 0e                              cmp #$0e
  337 T:11e2  f0 04                              beq doretry
  338 T:11e4  c9 04                              cmp #$04
  339 T:11e6  d0 08                              bne error
  340 T:11e8                           doretry   
  341 T:11e8  ce 07 04                           dec rcnt
  342 T:11eb  f0 03                              beq error
  343 T:11ed  4c d6 11                           jmp againin
  344 T:11f0                           error     
  345 T:11f0  a0 fb                              ldy #<-5
  346 T:11f2  38                                 sec 
  347 T:11f3  60                                 rts 
  348 T:11f4                           noerror   
  349 T:11f4  a9 00                              lda #<MAX3421E_EnMask
  349 T:11f6  20 00 00                           jsr spi_enable
  349 T:11f9  a9 c8                              lda #25<<3|$00
  349 T:11fb  20 00 00                           jsr spi_wra
  349 T:11fe  20 00 00                           jsr spi_wra
  349 T:1201  48                                 pha 
  349 T:1202  20 00 00                           jsr spi_disable
  349 T:1205  68                                 pla 
  350 T:1206  29 04                              and #$04
  351 T:1208  f0 e6                              beq error

  353 T:120a                                    ; transfer data
  354 T:120a                                    ; read number of bytes
  355 T:120a  a9 00                              lda #<MAX3421E_EnMask
  355 T:120c  20 00 00                           jsr spi_enable
  355 T:120f  a9 30                              lda #6<<3|$00
  355 T:1211  20 00 00                           jsr spi_wra
  355 T:1214  20 00 00                           jsr spi_wra
  355 T:1217  48                                 pha 
  355 T:1218  20 00 00                           jsr spi_disable
  355 T:121b  68                                 pla 
  356 T:121c  8d 06 04                           sta cnt

  358 T:121f                                    ; do we want that much data?
  359 T:121f  18                                 clc 
  360 T:1220  6d 08 04                           adc bcnt
  361 T:1223  cd 02 04                           cmp len
  362 T:1226  90 03                              bcc lenok
  363 T:1228  ad 02 04                           lda len
  364 T:122b  38                       lenok     sec 
  365 T:122c  ed 08 04                           sbc bcnt
  366 T:122f  8d 06 04                           sta cnt

  368 T:1232                                    ; data available?
  369 T:1232  c9 00                              cmp #0
  370 T:1234  f0 1a                              beq nodata

  372 T:1236                                    ; read data
  373 T:1236  a9 00                              lda #<MAX3421E_EnMask
  373 T:1238  20 00 00                           jsr spi_enable

  375 T:123b  a9 08                              lda #1<<3
  376 T:123d  20 00 00                           jsr spi_wra

  378 T:1240  a0 00                              ldy #0
  379 T:1242  20 00 00                 next      jsr spi_wra
  380 T:1245  91 06                              sta (dataptr),y
  381 T:1247  c8                                 iny 
  382 T:1248  cc 06 04                           cpy cnt
  383 T:124b  d0 f5                              bne next

  385 T:124d  20 00 00                           jsr spi_disable

  387 T:1250                           nodata    
  388 T:1250                                    ; clear data available interrupt
  389 T:1250  a9 00                              lda #<MAX3421E_EnMask
  389 T:1252  20 00 00                           jsr spi_enable
  389 T:1255  a9 ca                              lda #(25<<3)|$02
  389 T:1257  20 00 00                           jsr spi_wra
  389 T:125a  a9 04                              lda #($04)
  389 T:125c  20 00 00                           jsr spi_wra
  389 T:125f  20 00 00                           jsr spi_disable
  390 T:1262                                    ; update byte counter
  391 T:1262  ad 06 04                           lda cnt
  392 T:1265  18                                 clc 
  393 T:1266  6d 08 04                           adc bcnt
  394 T:1269  8d 08 04                           sta bcnt

  396 T:126c                                    ; are we done yet?
  397 T:126c                                    ; was last packet full sized?
  398 T:126c  ad 06 04                           lda cnt
  399 T:126f  cd 05 04                           cmp maxpklen
  400 T:1272  d0 0f                              bne done                ; no, then no further packet to receive

  402 T:1274                                    ; update pointer and length
  403 T:1274  ad 06 04                           lda cnt
  404 T:1277  18                                 clc 
  405 T:1278  65 06                              adc dataptr
  406 T:127a  85 06                              sta dataptr
  407 T:127c  90 02                              bcc nocarry
  408 T:127e  e6 07                              inc dataptr+1
  409 T:1280                           nocarry   
  410 T:1280  4c d6 11                           jmp againin

  412 T:1283                           done                       ; update DATA toggle
  413 T:1283  a0 03                              ldy #3
  414 T:1285  a9 00                              lda #<MAX3421E_EnMask
  414 T:1287  20 00 00                           jsr spi_enable
  414 T:128a  a9 f8                              lda #31<<3|$00
  414 T:128c  20 00 00                           jsr spi_wra
  414 T:128f  20 00 00                           jsr spi_wra
  414 T:1292  48                                 pha 
  414 T:1293  20 00 00                           jsr spi_disable
  414 T:1296  68                                 pla 
  415 T:1297  29 10                              and #$10
  416 T:1299  f0 06                              beq data0
  417 T:129b  b1 04                              lda (ctrlptr),y
  418 T:129d  09 40                              ora #$40
  419 T:129f  d0 04                              bne wrtog
  420 T:12a1  b1 04                    data0     lda (ctrlptr),y
  421 T:12a3  29 bf                              and #255-$40
  422 T:12a5  91 04                    wrtog     sta (ctrlptr),y

  424 T:12a7                                    ; done
  425 T:12a7  ad 08 04                           lda bcnt
  426 T:12aa  18                                 clc 
  427 T:12ab  60                                 rts 
  428 T:12ac                                     .) 

  430 T:12ac                           usb_host_control .( 

  432 T:12ac  85 04                              sta ctrlptr
  433 T:12ae  84 05                              sty ctrlptr+1

  440 T:12b0  20 2d 11                           jsr set_params
  441 T:12b3  b0 32                              bcs err

  443 T:12b5                                    ; send setup packet
  444 T:12b5  20 bc 14                           jsr sendsetup
  445 T:12b8  b0 2d                              bcs err

  452 T:12ba                                    ; set dataptr to data buffer address
  453 T:12ba  20 75 11                           jsr ptr_to_buffer

  455 T:12bd                                    ; set to DATA1 toggle
  456 T:12bd  a0 03                              ldy #3
  457 T:12bf  b1 04                              lda (ctrlptr),y
  458 T:12c1  09 40                              ora #$40
  459 T:12c3  91 04                              sta (ctrlptr),y

  461 T:12c5                                    ; host to device or device to host
  462 T:12c5  a0 0a                              ldy #10
  463 T:12c7  b1 04                              lda (ctrlptr),y
  464 T:12c9  30 0f                              bmi receive

  466 T:12cb  18                                 clc                    ; for outnodata
  467 T:12cc  ac 02 04                           ldy len
  468 T:12cf  f0 03                              beq outnodata                ; e.g. setaddr does not have data to be sent

  470 T:12d1  20 e8 12                           jsr do_out
  471 T:12d4                           outnodata 
  472 T:12d4  08                                 php 
  473 T:12d5  48                                 pha 

  475 T:12d6  a9 80                              lda #($80)           ; HS_IN
  476 T:12d8  d0 07                              bne dohs                ; always

  478 T:12da                           receive   
  479 T:12da  20 a5 11                           jsr get_in
  480 T:12dd  08                                 php 
  481 T:12de  48                                 pha 

  483 T:12df  a9 a0                              lda #($80+$20)     ; HS_OUT
  484 T:12e1                           dohs      

  486 T:12e1  20 59 14                           jsr docmd

  488 T:12e4  68                                 pla 
  489 T:12e5  28                                 plp 
  490 T:12e6  60                                 rts 
  491 T:12e7                           err       
  492 T:12e7  60                                 rts 

  494 T:12e8                                     .) 

  496 T:12e8                                    ; OUT transfer into buffer as given (in ctrlptr)
  497 T:12e8                                    ; len is the number of bytes to transfer in total
  498 T:12e8                           do_out    .( 

  500 T:12e8                                    ; set retry count
  501 T:12e8  a9 0a                              lda #10
  502 T:12ea  2c 04 04                           bit flags             ; check HOST_FLAG_IGNORE_NAK in bit 7
  503 T:12ed  10 02                              bpl retryc
  504 T:12ef  a9 01                              lda #1
  505 T:12f1  8d 07 04                 retryc    sta rcnt

  507 T:12f4                                    ; set byte count
  508 T:12f4  a9 00                              lda #0
  509 T:12f6  8d 08 04                           sta bcnt

  511 T:12f9                                    ; set toggle
  512 T:12f9  a0 03                              ldy #3
  513 T:12fb  b1 04                              lda (ctrlptr),y
  514 T:12fd  29 40                              and #$40
  515 T:12ff  d0 03                              bne togd1
  516 T:1301  a9 40                              lda #$40
  517 T:1303  2c                                 .byt $2c
  518 T:1304  a9 80                    togd1     lda #$80
  519 T:1306  48                                 pha 
  519 T:1307  a9 00                              lda #<MAX3421E_EnMask
  519 T:1309  20 00 00                           jsr spi_enable
  519 T:130c  a9 ea                              lda #(29<<3)|$02
  519 T:130e  20 00 00                           jsr spi_wra
  519 T:1311  68                                 pla 
  519 T:1312  20 00 00                           jsr spi_wra
  519 T:1315  20 00 00                           jsr spi_disable

  521 T:1318                           nextout   
  522 T:1318                                    ; computer number of bytes to transfer now
  523 T:1318  ad 02 04                           lda len
  524 T:131b  38                                 sec 
  525 T:131c  ed 08 04                           sbc bcnt
  526 T:131f  cd 05 04                           cmp maxpklen
  527 T:1322  90 03                              bcc lenok
  528 T:1324  ad 05 04                           lda maxpklen
  529 T:1327  8d 06 04                 lenok     sta cnt

  531 T:132a  c9 00                              cmp #0
  532 T:132c  f0 1b                              beq nodata

  534 T:132e                                    ; write data to chip fifo
  535 T:132e  a9 00                              lda #<MAX3421E_EnMask
  535 T:1330  20 00 00                           jsr spi_enable

  537 T:1333  a9 12                              lda #2<<3|2 ; OR#2 is write bit
  538 T:1335  20 00 00                           jsr spi_wra

  540 T:1338  a0 00                              ldy #0
  541 T:133a  b1 06                    next      lda (dataptr),y
  542 T:133c  20 00 00                           jsr spi_wra
  543 T:133f  c8                                 iny 
  544 T:1340  cc 06 04                           cpy cnt
  545 T:1343  d0 f5                              bne next

  547 T:1345  20 00 00                           jsr spi_disable

  549 T:1348  98                                 tya 
  550 T:1349                           nodata    
  551 T:1349                                    ; write number of bytes
  552 T:1349  48                                 pha 
  552 T:134a  a9 00                              lda #<MAX3421E_EnMask
  552 T:134c  20 00 00                           jsr spi_enable
  552 T:134f  a9 3a                              lda #(7<<3)|$02
  552 T:1351  20 00 00                           jsr spi_wra
  552 T:1354  68                                 pla 
  552 T:1355  20 00 00                           jsr spi_wra
  552 T:1358  20 00 00                           jsr spi_disable

  554 T:135b                                    ; start command
  555 T:135b  ad 03 04                           lda endpt             ; BULK/OUT command is bmOUTNIN ORd with endpoint number
  556 T:135e  09 20                              ora #($20)
  557 T:1360  20 59 14                           jsr docmd
  558 T:1363  d0 03                              bne retry
  559 T:1365  4c 0f 14                           jmp noerror                ; hrSUCCESS is 0

  561 T:1368  c9 04                    retry     cmp #$04
  562 T:136a  f0 07                              beq doretry
  563 T:136c  c9 0e                              cmp #$0e
  564 T:136e  f0 03                              beq doretry
  565 T:1370  4c 0b 14                 err1      jmp error
  566 T:1373                           doretry   
  567 T:1373  ce 07 04                           dec rcnt
  568 T:1376  f0 f8                              beq err1

  570 T:1378                                    ; process NAK according to Host out NAK bug
  571 T:1378                                    ; ref https:
  572 T:1378  a9 00                              lda #<MAX3421E_EnMask
  572 T:137a  20 00 00                           jsr spi_enable
  572 T:137d  a9 3a                              lda #(7<<3)|$02
  572 T:137f  20 00 00                           jsr spi_wra
  572 T:1382  a9 00                              lda #(0)
  572 T:1384  20 00 00                           jsr spi_wra
  572 T:1387  20 00 00                           jsr spi_disable
  573 T:138a  a0 00                              ldy #0
  574 T:138c  b1 06                              lda (dataptr),y
  575 T:138e  48                                 pha 
  575 T:138f  a9 00                              lda #<MAX3421E_EnMask
  575 T:1391  20 00 00                           jsr spi_enable
  575 T:1394  a9 12                              lda #(2<<3)|$02
  575 T:1396  20 00 00                           jsr spi_wra
  575 T:1399  68                                 pla 
  575 T:139a  20 00 00                           jsr spi_wra
  575 T:139d  20 00 00                           jsr spi_disable
  576 T:13a0  ad 06 04                           lda cnt
  577 T:13a3  48                                 pha 
  577 T:13a4  a9 00                              lda #<MAX3421E_EnMask
  577 T:13a6  20 00 00                           jsr spi_enable
  577 T:13a9  a9 3a                              lda #(7<<3)|$02
  577 T:13ab  20 00 00                           jsr spi_wra
  577 T:13ae  68                                 pla 
  577 T:13af  20 00 00                           jsr spi_wra
  577 T:13b2  20 00 00                           jsr spi_disable
  578 T:13b5  ad 03 04                           lda endpt             ; BULK/OUT command is bmOUTNIN ORd with endpoint number
  579 T:13b8  09 20                              ora #($20)
  580 T:13ba  48                                 pha 
  580 T:13bb  a9 00                              lda #<MAX3421E_EnMask
  580 T:13bd  20 00 00                           jsr spi_enable
  580 T:13c0  a9 f2                              lda #(30<<3)|$02
  580 T:13c2  20 00 00                           jsr spi_wra
  580 T:13c5  68                                 pla 
  580 T:13c6  20 00 00                           jsr spi_wra
  580 T:13c9  20 00 00                           jsr spi_disable
  581 T:13cc  a9 00                    wdone     lda #<MAX3421E_EnMask
  581 T:13ce  20 00 00                           jsr spi_enable
  581 T:13d1  a9 c8                              lda #25<<3|$00
  581 T:13d3  20 00 00                           jsr spi_wra
  581 T:13d6  20 00 00                           jsr spi_wra
  581 T:13d9  48                                 pha 
  581 T:13da  20 00 00                           jsr spi_disable
  581 T:13dd  68                                 pla 
  582 T:13de  29 80                              and #$80
  583 T:13e0  f0 ea                              beq wdone
  584 T:13e2  48                                 pha 
  584 T:13e3  a9 00                              lda #<MAX3421E_EnMask
  584 T:13e5  20 00 00                           jsr spi_enable
  584 T:13e8  a9 ca                              lda #(25<<3)|$02
  584 T:13ea  20 00 00                           jsr spi_wra
  584 T:13ed  68                                 pla 
  584 T:13ee  20 00 00                           jsr spi_wra
  584 T:13f1  20 00 00                           jsr spi_disable                ; clr interrupt
  585 T:13f4  a9 00                              lda #<MAX3421E_EnMask
  585 T:13f6  20 00 00                           jsr spi_enable
  585 T:13f9  a9 f8                              lda #31<<3|$00
  585 T:13fb  20 00 00                           jsr spi_wra
  585 T:13fe  20 00 00                           jsr spi_wra
  585 T:1401  48                                 pha 
  585 T:1402  20 00 00                           jsr spi_disable
  585 T:1405  68                                 pla 
  586 T:1406  29 0f                              and #($01+$02+$04+$08)
  587 T:1408  4c 68 13                           jmp retry

  589 T:140b  a0 fb                    error     ldy #<-5
  590 T:140d  38                                 sec 
  591 T:140e  60                                 rts 
  592 T:140f                           noerror   
  593 T:140f                                    ; update byte counter
  594 T:140f  ad 06 04                           lda cnt
  595 T:1412  18                                 clc 
  596 T:1413  6d 08 04                           adc bcnt
  597 T:1416  8d 08 04                           sta bcnt

  599 T:1419                                    ; are we done yet?
  600 T:1419                                    ; was last packet full sized?
  601 T:1419  ad 06 04                           lda cnt
  602 T:141c  cd 05 04                           cmp maxpklen
  603 T:141f  d0 0f                              bne done                ; no, then no further packet to send

  605 T:1421                                    ; update pointer and length
  606 T:1421  ad 06 04                           lda cnt
  607 T:1424  18                                 clc 
  608 T:1425  65 06                              adc dataptr
  609 T:1427  85 06                              sta dataptr
  610 T:1429  90 02                              bcc nocarry
  611 T:142b  e6 07                              inc dataptr+1
  612 T:142d                           nocarry   
  613 T:142d  4c 18 13                           jmp nextout

  615 T:1430                           done                       ; update DATA toggle
  616 T:1430  a0 03                              ldy #3
  617 T:1432  a9 00                              lda #<MAX3421E_EnMask
  617 T:1434  20 00 00                           jsr spi_enable
  617 T:1437  a9 f8                              lda #31<<3|$00
  617 T:1439  20 00 00                           jsr spi_wra
  617 T:143c  20 00 00                           jsr spi_wra
  617 T:143f  48                                 pha 
  617 T:1440  20 00 00                           jsr spi_disable
  617 T:1443  68                                 pla 
  618 T:1444  29 20                              and #$20
  619 T:1446  f0 06                              beq data0
  620 T:1448  b1 04                              lda (ctrlptr),y
  621 T:144a  09 40                              ora #$40
  622 T:144c  d0 04                              bne wrtog
  623 T:144e  b1 04                    data0     lda (ctrlptr),y
  624 T:1450  29 bf                              and #255-$40
  625 T:1452  91 04                    wrtog     sta (ctrlptr),y

  627 T:1454                                    ; done
  628 T:1454  ad 08 04                           lda bcnt
  629 T:1457                           no_nak    
  630 T:1457  18                                 clc 
  631 T:1458  60                                 rts 
  632 T:1459                                     .) 

  634 T:1459                                    ; trigger command and wait for completion
  635 T:1459                                    ; must keep y
  636 T:1459                           docmd     .( 
  637 T:1459  48                                 pha 
  638 T:145a                                    ; clear xfer done irq, just in case
  639 T:145a  a9 00                              lda #<MAX3421E_EnMask
  639 T:145c  20 00 00                           jsr spi_enable
  639 T:145f  a9 ca                              lda #(25<<3)|$02
  639 T:1461  20 00 00                           jsr spi_wra
  639 T:1464  a9 80                              lda #($80)
  639 T:1466  20 00 00                           jsr spi_wra
  639 T:1469  20 00 00                           jsr spi_disable
  640 T:146c  68                                 pla 
  641 T:146d  48                                 pha 
  641 T:146e  a9 00                              lda #<MAX3421E_EnMask
  641 T:1470  20 00 00                           jsr spi_enable
  641 T:1473  a9 f2                              lda #(30<<3)|$02
  641 T:1475  20 00 00                           jsr spi_wra
  641 T:1478  68                                 pla 
  641 T:1479  20 00 00                           jsr spi_wra
  641 T:147c  20 00 00                           jsr spi_disable                ; store in HXFR

  643 T:147f                                    ; wait for completion
  644 T:147f                           l0        
  645 T:147f  a9 00                              lda #<MAX3421E_EnMask
  645 T:1481  20 00 00                           jsr spi_enable
  645 T:1484  a9 c8                              lda #25<<3|$00
  645 T:1486  20 00 00                           jsr spi_wra
  645 T:1489  20 00 00                           jsr spi_wra
  645 T:148c  48                                 pha 
  645 T:148d  20 00 00                           jsr spi_disable
  645 T:1490  68                                 pla 
  646 T:1491  29 80                              and #$80
  647 T:1493  f0 ea                              beq l0
  648 T:1495  48                                 pha 
  648 T:1496  a9 00                              lda #<MAX3421E_EnMask
  648 T:1498  20 00 00                           jsr spi_enable
  648 T:149b  a9 ca                              lda #(25<<3)|$02
  648 T:149d  20 00 00                           jsr spi_wra
  648 T:14a0  68                                 pla 
  648 T:14a1  20 00 00                           jsr spi_wra
  648 T:14a4  20 00 00                           jsr spi_disable                ; clear interrupt bit

  650 T:14a7                                    ; check result
  651 T:14a7  a9 00                              lda #<MAX3421E_EnMask
  651 T:14a9  20 00 00                           jsr spi_enable
  651 T:14ac  a9 f8                              lda #31<<3|$00
  651 T:14ae  20 00 00                           jsr spi_wra
  651 T:14b1  20 00 00                           jsr spi_wra
  651 T:14b4  48                                 pha 
  651 T:14b5  20 00 00                           jsr spi_disable
  651 T:14b8  68                                 pla 
  652 T:14b9  29 0f                              and #($01+$02+$04+$08); the four result bits
  653 T:14bb  60                                 rts 
  654 T:14bc                                     .) 

  656 T:14bc                                    ; send a setup packet
  657 T:14bc                           sendsetup .( 
  658 T:14bc  a9 00                              lda #<MAX3421E_EnMask
  658 T:14be  20 00 00                           jsr spi_enable

  660 T:14c1  a9 22                              lda #(4<<3)|2; OR#2 to set the write bit
  661 T:14c3  20 00 00                           jsr spi_wra

  663 T:14c6                                    ; copy control message to chip fifo
  664 T:14c6  a0 0a                              ldy #10
  665 T:14c8                           c1        
  666 T:14c8  b1 04                              lda (ctrlptr),y

  672 T:14ca  20 00 00                           jsr spi_wra                ; setup packet into sl811 buffer
  673 T:14cd  c8                                 iny 
  674 T:14ce  c0 12                              cpy #10+8
  675 T:14d0  90 f6                              bcc c1

  677 T:14d2  20 00 00                           jsr spi_disable

  679 T:14d5  a0 0a                              ldy #10
  680 T:14d7                           retry     
  681 T:14d7                                    ; start SETUP
  682 T:14d7  a9 10                              lda #($10)
  683 T:14d9  20 59 14                           jsr docmd
  684 T:14dc  f0 07                              beq noerror                ; hrSUCCESS is 0

  686 T:14de  88                                 dey 
  687 T:14df  d0 f6                              bne retry
  688 T:14e1  38                                 sec 
  689 T:14e2  a0 fb                              ldy #<-5

  691 T:14e4  60                                 rts 
  692 T:14e5                           noerror   
  693 T:14e5  18                                 clc 
  694 T:14e6  60                                 rts 
  695 T:14e7                                     .) 

  698 T:14e7                                    ; set the preamble variable
  699 T:14e7                                    ; in: AC = device speed, rootspd = hub speed (0/1 = low/full speed)
  700 T:14e7                                    ; must preserve y
  701 T:14e7                           set_pream .( 
  702 T:14e7  cd 00 04                           cmp rootspd
  703 T:14ea  f0 1a                              beq no_pream                ; both either low or full, then no preamble
  704 T:14ec  c9 00                              cmp #0             ; is device low
  705 T:14ee  d0 16                              bne no_pream                ; no, device is high (and hub low, then no preamble)
  706 T:14f0  a9 00                              lda #<MAX3421E_EnMask
  706 T:14f2  20 00 00                           jsr spi_enable
  706 T:14f5  a9 d8                              lda #27<<3|$00
  706 T:14f7  20 00 00                           jsr spi_wra
  706 T:14fa  20 00 00                           jsr spi_wra
  706 T:14fd  48                                 pha 
  706 T:14fe  20 00 00                           jsr spi_disable
  706 T:1501  68                                 pla 
  707 T:1502  09 04                              ora #$04
  708 T:1504  d0 14                              bne setit
  709 T:1506                           no_pream  
  710 T:1506  a9 00                              lda #<MAX3421E_EnMask
  710 T:1508  20 00 00                           jsr spi_enable
  710 T:150b  a9 d8                              lda #27<<3|$00
  710 T:150d  20 00 00                           jsr spi_wra
  710 T:1510  20 00 00                           jsr spi_wra
  710 T:1513  48                                 pha 
  710 T:1514  20 00 00                           jsr spi_disable
  710 T:1517  68                                 pla 
  711 T:1518  29 fb                              and #255-$04
  712 T:151a                           setit     

  722 T:151a  48                                 pha 
  722 T:151b  a9 00                              lda #<MAX3421E_EnMask
  722 T:151d  20 00 00                           jsr spi_enable
  722 T:1520  a9 da                              lda #(27<<3)|$02
  722 T:1522  20 00 00                           jsr spi_wra
  722 T:1525  68                                 pla 
  722 T:1526  20 00 00                           jsr spi_wra
  722 T:1529  20 00 00                           jsr spi_disable
  723 T:152c  60                                 rts 
  724 T:152d                                     .) 

  726 T:152d                                    ; check USB device detection
  727 T:152d                                    ; C=1 device detected
  728 T:152d                                    ; C=0 device not present
  729 T:152d                           queryusbdevice .( 

  731 T:152d  a9 00                              lda #<MAX3421E_EnMask
  731 T:152f  20 00 00                           jsr spi_enable
  731 T:1532  a9 ea                              lda #(29<<3)|$02
  731 T:1534  20 00 00                           jsr spi_wra
  731 T:1537  a9 04                              lda #($04)
  731 T:1539  20 00 00                           jsr spi_wra
  731 T:153c  20 00 00                           jsr spi_disable

  733 T:153f                                    ; wait for end of sampling
  734 T:153f                                    ; Note: appnotes says SAMPLEBUS is cleared when sampling finished
  735 T:153f                                    ; however, it cannot be read. Other code just reads HSRL without further
  736 T:153f                                    ; ado. We wait for one frame
  737 T:153f  a9 01                              lda #1
  738 T:1541  20 00 00                           jsr pause

  740 T:1544                                    ; check bus status
  741 T:1544  a9 00                              lda #<MAX3421E_EnMask
  741 T:1546  20 00 00                           jsr spi_enable
  741 T:1549  a9 f8                              lda #31<<3|$00
  741 T:154b  20 00 00                           jsr spi_wra
  741 T:154e  20 00 00                           jsr spi_wra
  741 T:1551  48                                 pha 
  741 T:1552  20 00 00                           jsr spi_disable
  741 T:1555  68                                 pla 
  742 T:1556                                    ;inc $8027+80
  743 T:1556                                    ;sta $8026+80
  744 T:1556  29 c0                              and #$80+$40       ; if both are zero
  745 T:1558  f0 3f                              beq nodevice
  746 T:155a  4a                                 lsr                    ; div by 2, so is $00/20/40/60, but never neg
  747 T:155b  8d 01 04                           sta present             ; store whether device has been detected

  749 T:155e  a9 00                              lda #<MAX3421E_EnMask
  749 T:1560  20 00 00                           jsr spi_enable
  749 T:1563  a9 d8                              lda #27<<3|$00
  749 T:1565  20 00 00                           jsr spi_wra
  749 T:1568  20 00 00                           jsr spi_wra
  749 T:156b  48                                 pha 
  749 T:156c  20 00 00                           jsr spi_disable
  749 T:156f  68                                 pla 
  750 T:1570  29 02                              and #$02
  751 T:1572  f0 03                              beq highspeedcheck
  752 T:1574  a9 40                              lda #$80>>1       ; low speed check
  753 T:1576  2c                                 .byt $2c
  754 T:1577                           highspeedcheck 
  755 T:1577  a9 20                              lda #$40>>1
  756 T:1579  2d 01 04                           and present
  757 T:157c  f0 03                              beq isfullspeed
  758 T:157e  a9 00                              lda #0             ; low speed
  759 T:1580  2c                                 .byt $2c
  760 T:1581                           isfullspeed 
  761 T:1581  a9 01                              lda #1
  762 T:1583  48                                 pha 
  763 T:1584                                    ; clear connect IRQ, as may be set by changing LOWSPEED or SAMPLEBUS
  764 T:1584  a9 00                              lda #<MAX3421E_EnMask
  764 T:1586  20 00 00                           jsr spi_enable
  764 T:1589  a9 ca                              lda #(25<<3)|$02
  764 T:158b  20 00 00                           jsr spi_wra
  764 T:158e  a9 20                              lda #($20)
  764 T:1590  20 00 00                           jsr spi_wra
  764 T:1593  20 00 00                           jsr spi_disable

  768 T:1596  68                                 pla 
  769 T:1597  38                                 sec 
  770 T:1598  60                                 rts 
  771 T:1599                           nodevice  
  772 T:1599  18                                 clc                    ; then no device - C=0 (0 is < 1)

  774 T:159a  60                                 rts 
  775 T:159b                                     .) 

  777 T:159b                                    ; reset the chip and USB 
  778 T:159b                                    ;1.  Set BUSRST = 1.
  779 T:159b                                    ;2.  Test for BUSRST = 0 or respond to the BUSEVENTIRQ.
  780 T:159b                                    ;3.  Turn on frame markers by setting SOFKAENAB = 1.
  781 T:159b                                    ;4.  Wait for at least one FRAMEIRQ.

  783 T:159b                           usbreset  .( 

  785 T:159b                                    ; switch off sof frames
  786 T:159b  a9 00                              lda #<MAX3421E_EnMask
  786 T:159d  20 00 00                           jsr spi_enable
  786 T:15a0  a9 d8                              lda #27<<3|$00
  786 T:15a2  20 00 00                           jsr spi_wra
  786 T:15a5  20 00 00                           jsr spi_wra
  786 T:15a8  48                                 pha 
  786 T:15a9  20 00 00                           jsr spi_disable
  786 T:15ac  68                                 pla 
  787 T:15ad  29 f7                              and #255-$08
  788 T:15af  48                                 pha 
  788 T:15b0  a9 00                              lda #<MAX3421E_EnMask
  788 T:15b2  20 00 00                           jsr spi_enable
  788 T:15b5  a9 da                              lda #(27<<3)|$02
  788 T:15b7  20 00 00                           jsr spi_wra
  788 T:15ba  68                                 pla 
  788 T:15bb  20 00 00                           jsr spi_wra
  788 T:15be  20 00 00                           jsr spi_disable

  790 T:15c1                                    ; set BUSRST to 1
  791 T:15c1  a9 00                              lda #<MAX3421E_EnMask
  791 T:15c3  20 00 00                           jsr spi_enable
  791 T:15c6  a9 ea                              lda #(29<<3)|$02
  791 T:15c8  20 00 00                           jsr spi_wra
  791 T:15cb  a9 01                              lda #($01)
  791 T:15cd  20 00 00                           jsr spi_wra
  791 T:15d0  20 00 00                           jsr spi_disable

  793 T:15d3                                    ; wait for BUSRST to become 0
  794 T:15d3  a9 00                    l0        lda #<MAX3421E_EnMask
  794 T:15d5  20 00 00                           jsr spi_enable
  794 T:15d8  a9 e8                              lda #29<<3|$00
  794 T:15da  20 00 00                           jsr spi_wra
  794 T:15dd  20 00 00                           jsr spi_wra
  794 T:15e0  48                                 pha 
  794 T:15e1  20 00 00                           jsr spi_disable
  794 T:15e4  68                                 pla 
  795 T:15e5  29 01                              and #$01
  796 T:15e7  d0 ea                              bne l0

  798 T:15e9                           startsof  
  799 T:15e9                                    ; clear frame irq
  800 T:15e9  a9 00                              lda #<MAX3421E_EnMask
  800 T:15eb  20 00 00                           jsr spi_enable
  800 T:15ee  a9 ca                              lda #(25<<3)|$02
  800 T:15f0  20 00 00                           jsr spi_wra
  800 T:15f3  a9 40                              lda #($40)
  800 T:15f5  20 00 00                           jsr spi_wra
  800 T:15f8  20 00 00                           jsr spi_disable

  802 T:15fb                                    ; turn on frame markers
  803 T:15fb                                    ; When the CPU sets SOFKAENAB = 1, the SIE automatically generates 1-millisecond frame
  804 T:15fb                                    ; markers. If the bit LOWSPEED = 0, the SIE generates SOF packets. If LOWSPEED = 1, the SIE
  805 T:15fb                                    ; generates keep-alive pulses.
  806 T:15fb  a9 00                              lda #<MAX3421E_EnMask
  806 T:15fd  20 00 00                           jsr spi_enable
  806 T:1600  a9 d8                              lda #27<<3|$00
  806 T:1602  20 00 00                           jsr spi_wra
  806 T:1605  20 00 00                           jsr spi_wra
  806 T:1608  48                                 pha 
  806 T:1609  20 00 00                           jsr spi_disable
  806 T:160c  68                                 pla 
  807 T:160d  09 08                              ora #$08
  808 T:160f  48                                 pha 
  808 T:1610  a9 00                              lda #<MAX3421E_EnMask
  808 T:1612  20 00 00                           jsr spi_enable
  808 T:1615  a9 da                              lda #(27<<3)|$02
  808 T:1617  20 00 00                           jsr spi_wra
  808 T:161a  68                                 pla 
  808 T:161b  20 00 00                           jsr spi_wra
  808 T:161e  20 00 00                           jsr spi_disable

  810 T:1621                                    ; The SOF or KA pulses start after the SOFKAENAB bit has asserted for 1 millisecond. If the
  811 T:1621                                    ; CPU sets SOFKAENAB = 0 while the SIE is generating a frame marker, the SIE completes the
  812 T:1621                                    ; signaling before shutting off the frame markers.
  813 T:1621                                    ;
  814 T:1621                                    ; wait for first frame
  815 T:1621  a9 00                    l1        lda #<MAX3421E_EnMask
  815 T:1623  20 00 00                           jsr spi_enable
  815 T:1626  a9 c8                              lda #25<<3|$00
  815 T:1628  20 00 00                           jsr spi_wra
  815 T:162b  20 00 00                           jsr spi_wra
  815 T:162e  48                                 pha 
  815 T:162f  20 00 00                           jsr spi_disable
  815 T:1632  68                                 pla 
  816 T:1633  29 40                              and #$40
  817 T:1635  f0 ea                              beq l1
  818 T:1637  48                                 pha 
  818 T:1638  a9 00                              lda #<MAX3421E_EnMask
  818 T:163a  20 00 00                           jsr spi_enable
  818 T:163d  a9 ca                              lda #(25<<3)|$02
  818 T:163f  20 00 00                           jsr spi_wra
  818 T:1642  68                                 pla 
  818 T:1643  20 00 00                           jsr spi_wra
  818 T:1646  20 00 00                           jsr spi_disable

  820 T:1649  60                                 rts 
  821 T:164a                                     .) 

  824 T:164a                                     .) 
